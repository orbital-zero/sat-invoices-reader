# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# To   setup env variables see: https://docs.github.com/es/actions/learn-github-actions/environment-variables

name: Python package

on:
  push:
    branches: [ feature/*, release/* ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.8"]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest lxml==4.8.0 coverage
        # python -m pip install unittest2
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
        # stop the build if there are Python syntax errors or undefined names
        # # python -m flake8 classes --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
      run: |
        python -m flake8 classes --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --output-file coverage/flake-report.txt
    - name: Test
      run: |
        python -m coverage run --source=classes -m unittest discover -s ./test -p "*Test.py"
        python -m coverage lcov -o ./coverage/lcov.info
        python -m coverage xml -o ./coverage/coverage.xml
        # python -m coverage run --source=classes -m pytest test
    - name: Coveralls Scan
      uses: coverallsapp/github-action@1.1.3
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        git-branch: ${{ github.ref }}
        flag-name: Unit
    - name: SonarCloud Scan
      # You may pin to the exact commit or the version.
      # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
      # https://github.com/marketplace/actions/sonarcloud-scan
      uses: SonarSource/sonarcloud-github-action@v1.6
      with:
        # Set the sonar.projectBaseDir analysis property
        projectBaseDir: .
        # Additional arguments to the sonarcloud scanner
        args: >
          -Dsonar.organization=${{ secrets.SONAR_ORG }}
          -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY}}
          -Dsonar.python.coverage.reportPaths=./coverage/coverage.xml
          -Dsonar.tests=test/
          -Dsonar.sources=classes/
          -Dsonar.python.flake8.reportPaths=./coverage/flake-report.txt
          -Dsonar.python.version=3.8
      #  -Dsonar.test.exclusions=tests/**
      #  -Dsonar.verbose=true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
